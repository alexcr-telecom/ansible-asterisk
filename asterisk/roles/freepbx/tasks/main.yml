---
#Update and upgrade apt-based linux
- name: Update and upgrade apt-based Linux
  apt: update-cache=yes state=latest
  apt: upgrade=full
  sudo: yes

- name: install linux linux-headers
  action: shell apt-get install -y linux-headers-$(uname -r)
#  ignore_errors: True
#  tags:


#- name: check if a reboot is required
#  shell: "[ -f /var/run/reboot-required ]"
#  failed_when: False
#  register: reboot_required
#  changed_when: reboot_required.rc == 0
#  notify: reboot


- name: Install required system packages
  apt: name={{ item }}
  sudo: yes
  with_items:
    - aptitude
    - mc
    - htop
    - iftop
    - vim

- name: Install MySQL server and client
  apt: pkg={{ item }}
  sudo: yes
  with_items:
    - mysql-common
    - mysql-server
    - mysql-client
    - python-mysqldb

- name: Start mysql 
  service: name=mysql state=restarted
  sudo: yes

- name: Install apache2 server
  apt: pkg={{ item }}
  sudo: yes
  with_items:
    - apache2
    - ssl-cert

- name: Starting apache2 service
  service: name=apache2 state=restarted
  sudo: yes



- name: Install freepbx pre-requisites via apt
  apt: pkg={{ item }}
  sudo: yes
  with_items:
    - build-essential
    - wget
    - libssl-dev
    - libncurses5-dev
    - libnewt-dev
    - libxml2-dev
#    - linux-headers-${ansible_kernel}
    - libsqlite3-dev
    - uuid-dev
    - make
    - bison
    - flex
    - g++
    - gcc
    - php5
    - php5-curl
    - php5-cli
    - php5-mysql
    - php-pear
    - php-db
    - php5-gd
    - curl
    - sox
    - libsox-fmt-all
    - libncurses5-dev
    - libssl-dev
    - libmysqlclient15-dev
    - mpg123
    - unixodbc
    - unixodbc-dev
    - libmyodbc
    - subversion
    - git
    - fail2ban
    - libxml2
    - libxml2-dev
    - sqlite3
    - libsqlite3-dev
    - libnewt-dev
    - uuid-dev
    - libcurl4-openssl-dev
    - libsrtp0
    - libsrtp0-dev
    - libportaudio-dev
    - libportaudio0
    - libassuan0
    - libelfg0
    - libglib2.0-bin
    - libglib2.0-dev
    - libgmime-2.6-0
    - libgmime-2.6-dev
    - libgpgme11
    - libpcre3-dev
    - libpcrecpp0
    - libspandsp-dev
    - libspandsp2
    - libiksemel-dev
    - libiksemel3
    - libiksemel-utils

- name: Uninstall pear
  action: shell pear uninstall db
#  ignore_errors: True
#  tags:

- name: Install pear
  action: shell pear install db-1.7.14
#  ignore_errors: True
#  tags:


- group: name=asterisk state=present
- user: name=asterisk shell=/bin/bash groups=asterisk append=yes


- name: change php
  action: shell sed -i 's/\(^upload_max_filesize = \).*/\120M/' /etc/php5/apache2/php.ini

- name: change apache
  action: shell cp /etc/apache2/apache2.conf /etc/apache2/apache2.conf_orig

- name: change apache user to asterisk
  action: shell sed -i 's/^\(User\|Group\).*/\1 asterisk/' /etc/apache2/apache2.conf

- name: Starting apache2 service
  service: name=apache2 state=restarted
  sudo: yes


- name: Remove existing tarball libpri
  file: "path={{ libpri_tarball }} state=absent"
- name: Remove existing tarball dahdi
  file: "path={{ dahdi_tarball }} state=absent"
- name: Remove existing tarball asterisk
  file: "path={{ asterisk_tarball }} state=absent"
- name: Remove existing tarball freepbx
  file: "path={{ freepbx_tarball }} state=absent"

  
- name: Download asterisk dahdi libpri tarball
  get_url: "url={{ libpri_url }} dest={{ libpri_tarball }}"
- name: Download asterisk dahdi libpri tarball
  get_url: "url={{ dahdi_url }} dest={{ dahdi_tarball }}"
- name: Download asterisk dahdi libpri tarball
  get_url: "url={{ asterisk_url }} dest={{ asterisk_tarball }}"
- name: Download Freepbx
  get_url: "url={{ freepbx_url }} dest={{ freepbx_tarball }}"
  
- name: Remove existing install source dir
  file: "path={{ libpri_srcdir }} state=absent"
- name: Remove existing install source dir
  file: "path={{ dahdi_srcdir }} state=absent"
- name: Remove existing install source dir
  file: "path={{ asterisk_srcdir }} state=absent"
- name: Remove existing install source dir
  file: "path={{ freepbx_srcdir }} state=absent"

  
- name: Create install dir
  file: "path={{ libpri_srcdir }} state=directory"
- name: Create install dir
  file: "path={{ dahdi_srcdir }} state=directory"
- name: Create install dir
  file: "path={{ asterisk_srcdir }} state=directory"
- name: Create install dir freepbx
  file: "path={{ freepbx_srcdir }} state=directory"
  
- name: Unpack tarball libpri
  command: "tar -xzf {{ libpri_tarball }} -C {{ libpri_srcdir }} --strip-components=1"
- name: Unpack tarball dahdi
  command: "tar -xzf {{ dahdi_tarball }} -C {{ dahdi_srcdir }} --strip-components=1"
- name: Unpack tarball asterisk
  command: "tar -xzf {{ asterisk_tarball }} -C {{ asterisk_srcdir }} --strip-components=1"
- name: Unpack tarball freepbx
  command: "tar -xzf {{ freepbx_tarball }} -C {{ freepbx_srcdir }} --strip-components=1"


- name: Build Dahdi from tarball
  command: "{{ item }} chdir={{ dahdi_srcdir }}"
  with_items:
    - make
    - make install
    - make config

- name: restart dahdi
  service: name=dahdi state=restarted
  sudo: yes


- name: Build LibPRI from tarball
  command: "{{ item }} chdir={{ libpri_srcdir }}"
  with_items:
    - make
    - make install


#- name: Get mp3 source
#  shell:
#    ./configure && ./contrib/scripts/get_mp3_source.sh
#    chdir={{ asterisk_src_dir.stdout }}
#  tags: asterisk

- name: Copy menuselect.makeopts file
  template:
    src: menuselect.makeopts.j2
    dest: "{{ asterisk_srcdir }}/menuselect.makeopts"
  tags: asterisk


- name: Build Asterisk from tarball
  command: "{{ item }} chdir={{ asterisk_srcdir }}"
  with_items:
    - ./configure
    - make menuselect.makeopts
#    - sed -i -e 's/res_snmp//' menuselect.makeopts
#    - sed -i -e 's/chan_sip//' menuselect.makeopts
#    - sed -i -e 's/res_http_websocket//' menuselect.makeopts
    - make
#    - make uninstall
    - make install
    - make config
    - make samples
    - make install-logrotate

- name: Gen CONFIG for DAHDI
  command: dahdi_genconf chdir={{ dahdi_srcdir }}
  sudo: yes

- name: Gen CONFIG for DAHDI
  command: dahdi_cfg chdir={{ dahdi_srcdir }}
  sudo: yes


#- name: Download asterisk sounds (ulaw format)
#  get_url: "url={{ asterisk_url_sounds }} dest={{ asterisk_path_soundstarball }}"

#- name: Create install dir
#  file: "path={{ asterisk_srcdir }} state=directory"

#- name: Unpack sounds
#  command: "tar -xzf {{ asterisk_path_soundstarball }} -C {{ asterisk_path_sound }}"


- name: Copy configs files 
  template: 
    src: "{{ item }}.j2"
    dest: "/etc/asterisk/{{ item }}.conf"
  with_items:
    - acl.conf
    - cdr_tds.conf
    - extconfig.conf
    - mgcp.conf
    - res_odbc.conf
    - adsi.conf
    - cel.conf
    - extensions.ael
    - minivm.conf
    - res_pgsql.conf
    - agents.conf
    - cel_custom.conf
    - extensions.conf
    - misdn.conf
    - res_pktccops.conf
    - alarmreceiver.conf
    - cel_odbc.conf
    - extensions.lua
    - modules.conf
    - res_snmp.conf
    - alsa.conf
    - cel_pgsql.conf
    - extensions_minivm.conf
    - motif.conf
    - res_stun_monitor.conf
    - amd.conf
    - cel_sqlite3_custom.conf
    - features.conf
    - musiconhold.conf
    - rtp.conf
    - app_mysql.conf
    - cel_tds.conf
    - festival.conf
    - muted.conf
    - say.conf
    - app_skel.conf
    - chan_dahdi.conf
    - followme.conf
    - ooh323.conf
    - sip.conf
    - asterisk.adsi
    - chan_mobile.conf
    - func_odbc.conf
    - osp.conf
    - sip_notify.conf
    - asterisk.conf
    - cli.conf
    - gtalk.conf
    - oss.conf
    - skinny.conf
    - calendar.conf
    - cli_aliases.conf
    - h323.conf
    - phone.conf
    - sla.conf
    - ccss.conf
    - cli_permissions.conf
    - http.conf
    - phoneprov.conf
    - smdi.conf
    - cdr.conf
    - codecs.conf
    - iax.conf
    - queuerules.conf
    - telcordia-1.adsi
    - cdr_adaptive_odbc.conf
    - confbridge.conf
    - iaxprov.conf
    - queues.conf
    - udptl.conf
    - cdr_custom.conf
    - config_test.conf
    - indications.conf
    - res_config_mysql.conf
    - unistim.conf
    - cdr_manager.conf
    - console.conf
    - jabber.conf
    - res_config_sqlite.conf
    - users.conf
    - cdr_mysql.conf
    - dbsep.conf
    - jingle.conf
    - res_config_sqlite3.conf
    - voicemail.conf
    - cdr_odbc.conf
    - dnsmgr.conf
    - logger.conf
    - res_corosync.conf
    - vpb.conf
    - cdr_pgsql.conf
    - dsp.conf
    - manager.conf
    - res_curl.conf
    - xmpp.conf
    - cdr_sqlite3_custom.conf
    - dundi.conf
    - meetme.conf
    - res_fax.conf
    - cdr_syslog.conf
    - enum.conf
    - res_ldap.conf
  notify: Restart Asterisk
  tags: asterisk-config

- name: restart asterisk
  service: name=asterisk state=restarted
  tags: asterisk-config


- name: Set permissions
  file: dest={{ item }} state=directory
        owner=asterisk group=asterisk
        mode=0775
        recurse=yes
  with_items:
    - /etc/asterisk/
    - /var/run/asterisk/
    - /var/lib/asterisk/
    - /var/spool/asterisk/
    - /var/log/asterisk/
    - /usr/lib/asterisk/
    - /var/www/

#- name: freepbx export
#  action: shell export ASTERISK_DB_PW=`dd if=/dev/urandom bs=1 count=32 2>/dev/null | base64 - | cut -c2-18`
#  tags: export
- name: change mysqladmin
  action: shell mysqladmin -u root create asterisk
- name: change mysqladmin
  action: shell mysqladmin -u root create asteriskcdrdb

- name: change mysqladmin
  action: shell mysql -u root -e "GRANT ALL PRIVILEGES ON asterisk.* TO asteriskuser@localhost IDENTIFIED BY '{{ mysql_pass }}';"
  tags: mysql-pass
- name: change mysqladmin
  action: shell mysql -u root -e "GRANT ALL PRIVILEGES ON asteriskcdrdb.* TO asteriskuser@localhost IDENTIFIED BY '{{ mysql_pass }}';"
  tags: mysql-pass
- name: change mysqladmin
  action: shell mysql -u root -e "flush privileges;"
  tags: mysql-pass
- name: start asterisk - freepbx
  action: shell {{ freepbx_srcdir }}/start_asterisk start
  tags: mysql-pass

- name: remove html - freepbx
  action: shell rm -r /var/www/html/
  tags: mysql-pass
  
- name: INSTALL freepbx
  action: shell {{ freepbx_srcdir }}/install_amp --installdb --username=asteriskuser --password={{ mysql_pass }}
  tags: mysql-pass
- name: INSTALL freepbx
  action: shell amportal chown
- name: INSTALL freepbx
  action: shell amportal a ma installall
- name: INSTALL freepbx
  action: shell amportal a reload
- name: INSTALL freepbx
  action: shell amportal a ma refreshsignatures
- name: INSTALL freepbx
  action: shell amportal chown
- name: INSTALL freepbx
  action: shell ln -s /var/lib/asterisk/moh /var/lib/asterisk/mohmp3
- name: INSTALL freepbx
  action: shell amportal restart
  
